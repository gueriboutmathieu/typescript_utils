name: ðŸ§© Build and release

on: 
  workflow_call:
    inputs:
      node-version:
        type: string
        description: "Node version"
        required: false
        default: "22"
      deploy-to-github-pages:
        type: boolean
        description: "Deploy to GitHub Pages"
        required: false
        default: false
      custom-domain-name:
        type: string
        description: "Custom domain name"
        required: false
        default: ""

jobs:
  check-release-tag:
    name: Check release tag
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.check_release_tag.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Check if release tag is present in commit message
        id: check_release_tag
        run: |
          VERSION=$(git log -1 --pretty=%B | grep -Eo 'release: [0-9]+\.[0-9]+\.[0-9]+' | sed 's/release: //')
          if [ -z "$VERSION" ]; then
            echo "No release tag found in commit message, skipping build and release"
            echo "version=" >> $GITHUB_OUTPUT
          else
            echo "Found new release tag: $VERSION, proceeding with build and release"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          fi

  build-and-release:
    name: Build and release
    runs-on: ubuntu-latest
    needs: check-release-tag
    if: needs.check-release-tag.outputs.version != ''
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install and setup fnm and pnpm
        run: |
          curl -fsSL https://fnm.vercel.app/install | bash -s -- --install-dir "./.fnm" --skip-shell
          export PATH="./.fnm:$PATH"
          eval "$(fnm env --use-on-cd --shell bash)"
          fnm install ${{ inputs.node-version }}
          fnm use ${{ inputs.node-version }}
          npm install -g pnpm

      - name: Install dependencies
        run: |
          export PATH="./.fnm:$PATH"
          eval "$(fnm env --use-on-cd --shell bash)"
          pnpm i

      - name: Set up Git user
        uses: fregante/setup-git-user@v2

      - name: Create tag
        run: |
          VERSION=${{ needs.check-release-tag.outputs.version }}
          git tag -a $VERSION -m "Release version $VERSION"
          git push origin $VERSION

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.check-release-tag.outputs.version }}
    
      - name: Build static app
        if: inputs.deploy-to-github-pages
        run: |
          export PATH="./.fnm:$PATH"
          eval "$(fnm env --use-on-cd --shell bash)"
          pnpm run generate
    
      - name: Add custom domain name
        if: inputs.deploy-to-github-pages && inputs.custom-domain-name != ''
        run: |
          echo ${{ inputs.custom-domain-name }} > .output/public/CNAME
    
      - name: Deploy to GitHub Pages
        if: inputs.deploy-to-github-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .output/public
